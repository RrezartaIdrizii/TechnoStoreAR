{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"section no-pad-bot\",\n  id: \"index-banner\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col m8\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Checkout\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"row\"\n};\nconst _hoisted_5 = {\n  class: \"col m8\"\n};\nconst _hoisted_6 = {\n  class: \"card\"\n};\nconst _hoisted_7 = {\n  class: \"card-body\",\n  style: {\n    \"padding\": \"20px\"\n  }\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"stripe-card-element\",\n  style: {\n    \"padding-top\": \"20px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"input-field col m6\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"input-field col m6\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"E-mail\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"input-field col m6\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"mobile\"\n}, \"Mobile\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"input-field col m6\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"country\"\n}, \"Country\", -1 /* HOISTED */);\nconst _hoisted_19 = {\n  class: \"input-field col m6\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"address\"\n}, \"Address\", -1 /* HOISTED */);\nconst _hoisted_21 = [\"textContent\"];\nconst _hoisted_22 = [\"disabled\"];\nconst _hoisted_23 = {\n  class: \"col m4\"\n};\nconst _hoisted_24 = {\n  class: \"card\"\n};\nconst _hoisted_25 = {\n  class: \"card-body\"\n};\nconst _hoisted_26 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_27 = {\n  class: \"table align-items-center justify-content-center mb-0\",\n  id: \"products-table\"\n};\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Price\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total\")])], -1 /* HOISTED */);\nconst _hoisted_29 = [\"textContent\"];\nconst _hoisted_30 = [\"textContent\"];\nconst _hoisted_31 = [\"textContent\"];\nconst _hoisted_32 = {\n  colspan: \"4\",\n  style: {\n    \"text-align\": \"right\"\n  }\n};\nconst _hoisted_33 = {\n  style: {\n    \"margin-right\": \"20px\"\n  }\n};\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"b\", null, \"Total: \", -1 /* HOISTED */);\nconst _hoisted_35 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [$data.cartEmpty ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"The cart is empty.\")) : (_openBlock(), _createElementBlock(\"form\", _hoisted_9, [_createCommentVNode(\" credit card UI will be rendered here \"), _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _hoisted_12]), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_14]), _createElementVNode(\"div\", _hoisted_15, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"mobile\",\n    name: \"mobile\",\n    type: \"text\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.mobile = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.mobile]]), _hoisted_16]), _createElementVNode(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"country\",\n    name: \"country\",\n    type: \"text\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.country = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.country]]), _hoisted_18]), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"textarea\", {\n    id: \"address\",\n    name: \"address\",\n    class: \"materialize-textarea\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.address = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.address]]), _hoisted_20]), _createCommentVNode(\" <button type=\\\"button\\\" class=\\\"waves-effect waves-light btn\\\" v-on:click=\\\"getStripeClientSecret\\\" style=\\\"margin-bottom: 20px;\\\" v-bind:disabled=\\\"paymentLoading\\\">Pay via stripe</button> \"), _createCommentVNode(\" <p>Or</p> \"), _createCommentVNode(\" paypal button will be rendered here using Javascript \"), _createCommentVNode(\" <div id=\\\"btn-paypal-checkout\\\"></div> \"), _createElementVNode(\"p\", {\n    textContent: _toDisplayString($data.paymentStatus)\n  }, null, 8 /* PROPS */, _hoisted_21), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"waves-effect waves-light btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.cashOnDelivery && $options.cashOnDelivery(...args)),\n    style: {\n      \"margin-bottom\": \"20px\"\n    },\n    disabled: $data.paymentLoading\n  }, \"Cash on delivery\", 8 /* PROPS */, _hoisted_22)]))])])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"table\", _hoisted_27, [_hoisted_28, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, (product, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product._id\n    }, [_createElementVNode(\"td\", {\n      textContent: _toDisplayString(product.name)\n    }, null, 8 /* PROPS */, _hoisted_29), _createElementVNode(\"td\", {\n      textContent: _toDisplayString('€' + product.price + ' x ' + product.units)\n    }, null, 8 /* PROPS */, _hoisted_30), _createElementVNode(\"td\", {\n      textContent: _toDisplayString('€' + product.price * product.units)\n    }, null, 8 /* PROPS */, _hoisted_31)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"tfoot\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_hoisted_34, _createTextVNode(\" €\"), _createElementVNode(\"span\", {\n    textContent: _toDisplayString($data.total)\n  }, null, 8 /* PROPS */, _hoisted_35)])])])])])])])])])])])]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","style","for","colspan","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$data","cartEmpty","_hoisted_8","_hoisted_9","_createCommentVNode","_hoisted_10","_hoisted_11","name","type","required","$event","_hoisted_12","_hoisted_13","email","_hoisted_14","_hoisted_15","mobile","_hoisted_16","_hoisted_17","country","_hoisted_18","_hoisted_19","address","_hoisted_20","_toDisplayString","paymentStatus","onClick","_cache","args","$options","cashOnDelivery","disabled","paymentLoading","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_Fragment","_renderList","products","product","index","key","_id","price","units","_hoisted_32","_hoisted_33","_hoisted_34","total"],"sources":["C:\\Users\\arbid\\OneDrive\\Desktop\\TechnoStoreAR-main\\client\\src\\components\\CheckoutComponent.vue"],"sourcesContent":["<template>\n\t<div class=\"section no-pad-bot\" id=\"index-banner\">\n\t\t<div class=\"container\">\n\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col m8\">\n\t\t\t\t\t<h1 class=\"text-center\">Checkout</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col m8\">\n\t\t\t\t\t<div class=\"card\">\n\n\t                    <div class=\"card-body\" style=\"padding: 20px;\">\n\t                    \t<p v-if=\"cartEmpty\">The cart is empty.</p>\n\n\t                    \t<form v-else>\n\t                    \t\t<!-- credit card UI will be rendered here -->\n\t\t\t\t\t\t\t\t<div id=\"stripe-card-element\" style=\"padding-top: 20px;\"></div>\n\n\t                    \t\t<div class=\"input-field col m6\">\n\t\t\t\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" required v-model=\"name\" />\n\t\t\t\t\t\t\t\t\t<label for=\"name\">Name</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\n\t\t\t\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" required v-model=\"email\" />\n\t\t\t\t\t\t\t\t\t<label for=\"email\">E-mail</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\n\t\t\t\t\t\t\t\t\t<input id=\"mobile\" name=\"mobile\" type=\"text\" required v-model=\"mobile\" />\n\t\t\t\t\t\t\t\t\t<label for=\"mobile\">Mobile</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\n\t\t\t\t\t\t\t\t\t<input id=\"country\" name=\"country\" type=\"text\" required v-model=\"country\" />\n\t\t\t\t\t\t\t\t\t<label for=\"country\">Country</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\n\t\t\t\t\t\t\t\t\t<textarea id=\"address\" name=\"address\" class=\"materialize-textarea\" required v-model=\"address\"></textarea>\n\t\t\t\t\t\t\t\t\t<label for=\"address\">Address</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<!-- <button type=\"button\" class=\"waves-effect waves-light btn\" v-on:click=\"getStripeClientSecret\" style=\"margin-bottom: 20px;\" v-bind:disabled=\"paymentLoading\">Pay via stripe</button> -->\n\n\t\t\t\t\t\t\t\t<!-- <p>Or</p> -->\n\n\t\t\t\t\t\t\t\t<!-- paypal button will be rendered here using Javascript -->\n\t\t\t\t\t\t\t\t<!-- <div id=\"btn-paypal-checkout\"></div> -->\n\n\t\t\t\t\t\t\t\t<p v-text=\"paymentStatus\"></p>\n\n\t\t\t\t\t\t\t\t<button type=\"button\" class=\"waves-effect waves-light btn\" v-on:click=\"cashOnDelivery\" style=\"margin-bottom: 20px;\" v-bind:disabled=\"paymentLoading\">Cash on delivery</button>\n\t                    \t</form>\n\t                    </div>\n\t                </div>\n\t            </div>\n\n\t            <div class=\"col m4\">\n\t            \t<div class=\"card\">\n\t            \t\t<div class=\"card-body\">\n\t            \t\t\t<div class=\"table-responsive\">\n\t\t                        <table class=\"table align-items-center justify-content-center mb-0\" id=\"products-table\">\n\t\t                            <thead>\n\t\t                                <tr>\n\t\t                                    <th>Name</th>\n\t\t                                    <th>Price</th>\n\t\t                                    <th>Total</th>\n\t\t                                </tr>\n\t\t                            </thead>\n\n\t\t                            <tbody>\n\t\t                                <tr v-for=\"(product, index) in products\" v-bind:key=\"product._id\">\n\t\t                                \t<td v-text=\"product.name\"></td>\n\t\t                                \t<td v-text=\"'€' + product.price + ' x ' + product.units\"></td>\n\t\t                                \t<td v-text=\"'€' + (product.price * product.units)\"></td>\n\t\t                                </tr>\n\t\t                            </tbody>\n\n\t\t                            <tfoot>\n\n\t\t                            \t<tr>\n\t\t                            \t\t<td colspan=\"4\" style=\"text-align: right;\">\n\t\t                            \t\t\t<div style=\"margin-right: 20px;\">\n\t\t                            \t\t\t\t<b>Total: </b>\n\t\t                            \t\t\t\t€<span v-text=\"total\"></span>\n\t\t                            \t\t\t</div>\n\t\t                            \t\t</td>\n\t\t                            \t</tr>\n\t\t                            </tfoot>\n\t\t                        </table>\n\t\t                    </div>\n\t            \t\t</div>\n\t            \t</div>\n\t            </div>\n\t        </div>\n\t    </div>\n\t</div>\n</template>\n\n<script>\n\n\timport axios from \"axios\"\n\timport swal from \"sweetalert2\"\n\timport store from \"../vuex/store\"\n\timport { loadScript } from \"@paypal/paypal-js\"\n\n    export default {\n    \tdata() {\n    \t\treturn {\n    \t\t\tclientSecret: \"\",\n    \t\t\tcardElement: null,\n    \t\t\tstripe: null,\n    \t\t\temail: \"\",\n    \t\t\tname: \"\",\n    \t\t\tmobile: \"\",\n    \t\t\taddress: \"\",\n    \t\t\tcountry: \"\",\n    \t\t\tpaymentLoading: false,\n    \t\t\tpaymentStatus: \"\",\n    \t\t\tcartEmpty: false,\n    \t\t\ttotal: 0,\n    \t\t\tproducts: []\n    \t\t}\n    \t},\n\n    \tmethods: {\n    \t\tcashOnDelivery: function () {\n    \t\t\tconst self = this\n    \t\t\tswal.fire({\n\t\t\t\t\ttitle: 'Cash on delivery',\n\t\t\t\t\ttext: \"I want to process my order on cash on delivery.\",\n\t\t\t\t\ticon: 'warning',\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\t\t\tcancelButtonColor: '#d33',\n\t\t\t\t\tconfirmButtonText: 'Yes'\n\t\t\t\t})\n    \t\t\t.then(async function (result) {\n\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\tlet products = []\n\t\t    \t\t\tconst cookieParts = document.cookie.split(\"; \")\n\t\t    \t\t\tfor (let a = 0; a < cookieParts.length; a++) {\n\t\t\t\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\n\t\t\t\t\t\t\tif (keyValue[0] == \"products\") {\n\t\t\t\t\t\t\t\tproducts = keyValue[1]\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t    \t\t\tself.paymentLoading = true\n\t\t                self.paymentStatus = \"Processing your order...\"\n\n\t\t                const formData = new FormData()\n\t\t                formData.append(\"products\", products)\n\t\t                formData.append(\"name\", self.name)\n\t\t                formData.append(\"email\", self.email)\n\t\t                formData.append(\"mobile\", self.mobile)\n\t\t                formData.append(\"country\", self.country)\n\t\t                formData.append(\"address\", self.address)\n\n\t\t                const response = await axios.post(\n\t\t                    self.$apiURL + \"/cashOnDelivery\",\n\t\t                    formData\n\t\t                )\n\n\t\t                self.paymentLoading = false\n\t\t                self.paymentStatus = \"\"\n\n\t\t                if (response.data.status == \"success\") {\n\t\t                \tswal.fire(\"Success\", response.data.message, \"success\")\n\t\t                \tdocument.cookie = \"products=\" + JSON.stringify([])\n\t\t                \tstore.commit(\"setCartCounter\", 0)\n\t\t                \tself.cartEmpty = true\n\t\t                } else {\n\t\t                    swal.fire(\"Error\", response.data.message, \"error\")\n\t\t                }\n\t\t\t\t\t}\n\t\t\t\t})\n    \t\t},\n    \t\t\n    \t\tpaidViaPaypal: async function(details) {\n    \t\t\tlet products = []\n    \t\t\tconst cookieParts = document.cookie.split(\"; \")\n    \t\t\tfor (let a = 0; a < cookieParts.length; a++) {\n\t\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\n\t\t\t\t\tif (keyValue[0] == \"products\") {\n\t\t\t\t\t\tproducts = keyValue[1]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n    \t\t\tconst formData = new FormData()\n                formData.append(\"products\", products)\n                formData.append(\"details\", JSON.stringify(details))\n                formData.append(\"name\", this.name)\n                formData.append(\"email\", this.email)\n                formData.append(\"mobile\", this.mobile)\n                formData.append(\"country\", this.country)\n                formData.append(\"address\", this.address)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/paidViaPaypal\",\n                    formData\n                )\n\n                this.paymentLoading = false\n                this.paymentStatus = \"\"\n\n                if (response.data.status == \"success\") {\n                \tswal.fire(\"Success\", response.data.message, \"success\")\n                \tdocument.cookie = \"products=\" + JSON.stringify([])\n                \tstore.commit(\"setCartCounter\", 0)\n                \tthis.cartEmpty = true\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n\t\t\t},\n\n    \t\tconfirmPayment: async function(paymentId) {\n    \t\t\tlet products = []\n    \t\t\tconst cookieParts = document.cookie.split(\"; \")\n    \t\t\tfor (let a = 0; a < cookieParts.length; a++) {\n\t\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\n\t\t\t\t\tif (keyValue[0] == \"products\") {\n\t\t\t\t\t\tproducts = keyValue[1]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n    \t\t\tconst formData = new FormData()\n                formData.append(\"paymentId\", paymentId)\n                formData.append(\"products\", products)\n                formData.append(\"name\", this.name)\n                formData.append(\"email\", this.email)\n                formData.append(\"mobile\", this.mobile)\n                formData.append(\"country\", this.country)\n                formData.append(\"address\", this.address)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/confirmStripePayment\",\n                    formData\n                )\n\n                this.paymentLoading = false\n                this.paymentStatus = \"\"\n\n                if (response.data.status == \"success\") {\n                \tswal.fire(\"Success\", response.data.message, \"success\")\n                \tdocument.cookie = \"products=\" + JSON.stringify([])\n                \tstore.commit(\"setCartCounter\", 0)\n                \tthis.cartEmpty = true\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n\t\t\t},\n\n    \t\tpayViaStripe: function() {\n    \t\t\tif (this.cardElement == null || this.stripe == null) {\n    \t\t\t\treturn\n    \t\t\t}\n\n    \t\t\tconst self = this\n\n\t\t\t    // execute the payment\n\t\t\t    this.stripe.confirmCardPayment(this.clientSecret, {\n\t\t            payment_method: {\n\t\t                    card: this.cardElement,\n\t\t                    billing_details: {\n\t\t                        \"email\": this.email,\n\t\t                        \"name\": this.name,\n\t\t                        \"phone\": this.mobile\n\t\t                    },\n\t\t                },\n\t\t            })\n\t\t            .then(function(result) {\n\n\t\t                // Handle result.error or result.paymentIntent\n\t\t                if (result.error) {\n\t\t                    // console.log(result.error)\n\t\t                    self.paymentLoading = false\n\t\t                    self.paymentStatus = result.error\n\t\t                } else {\n\t\t                    // console.log(\"The card has been verified successfully...\", result.paymentIntent.id)\n\n\t\t                    self.confirmPayment(result.paymentIntent.id)\n\t\t                }\n\t\t            })\n\t\t\t},\n\n    \t\tgetStripeClientSecret: async function () {\n    \t\t\tthis.paymentLoading = true\n    \t\t\tthis.paymentStatus = \"Processing your payment...\"\n\n    \t\t\tconst formData = new FormData()\n                formData.append(\"total\", this.total)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/getStripeClientSecret\",\n                    formData\n                )\n\n                if (response.data.status == \"success\") {\n                \tthis.clientSecret = response.data.clientSecret\n                \tthis.payViaStripe()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n\n                    this.paymentLoading = false\n                    this.paymentStatus = \"\"\n                }\n            }\n    \t},\n\n    \tmounted: async function () {\n    \t\tconst self = this\n    \t\tconst cookieParts = document.cookie.split(\"; \")\n\t\t\tthis.total = 0\n\t\t\tfor (let a = 0; a < cookieParts.length; a++) {\n\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\n\t\t\t\tif (keyValue[0] == \"products\") {\n\t\t\t\t\tconst products = JSON.parse(keyValue[1])\n\t\t\t\t\tthis.products = products\n\t\t\t\t\tfor (let a = 0; a < products.length; a++) {\n\t        \t\t\tthis.total += (products[a].units * products[a].price)\n\t        \t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst response = await axios.post(\n                this.$apiURL + \"/getConfigurations\",\n                null\n            )\n\n            if (response.data.status == \"success\") {\n                let configurations = response.data.configurations\n                if (configurations != null) {\n                    const user = store.getters.getUser\n                    if (user != null) {\n                    \tthis.name = user.name\n                    \tthis.email = user.email\n                    }\n                }\n            }\n\n\t\t\tif (this.total == 0) {\n\t\t\t\tthis.cartEmpty = true\n\t\t\t} else {\n\t\t\t\tthis.cartEmpty = false\n\n\t\t\t\tconst response = await axios.post(\n                    this.$apiURL + \"/getConfigurations\",\n                    null\n                )\n\n                if (response.data.status == \"success\") {\n                \tthis.stripe = Stripe(response.data.configurations.stripePublishableKey)\n\t\t\t        let elements = this.stripe.elements()\n\t\t\t        this.cardElement = elements.create('card')\n\t\t\t        this.cardElement.mount('#stripe-card-element')\n\n\t\t\t\t\ttry {\n\t\t\t\t\t    let paypal = await loadScript({ \"client-id\": response.data.configurations.paypalClientId })\n\n\t\t\t\t\t    try {\n\t\t\t\t\t        await paypal.Buttons({\n\n\t\t\t\t\t            // Set your environment\n\t\t\t\t\t            env: 'sandbox', // sandbox | production\n\n\t\t\t\t\t            // Specify the style of the button\n\t\t\t\t\t            style: {\n\t\t\t\t\t                label: 'checkout',\n\t\t\t\t\t                size: 'medium', // small | medium | large | responsive\n\t\t\t\t\t                shape: 'pill', // pill | rect\n\t\t\t\t\t                color: 'gold', // gold | blue | silver | black,\n\t\t\t\t\t                layout: 'horizontal'\n\t\t\t\t\t            },\n\n\t\t\t\t\t            // PayPal Client IDs - replace with your own\n\t\t\t\t\t            // Create a PayPal app: https://developer.paypal.com/developer/applications/create\n\n\t\t\t\t\t            client: {\n\t\t\t\t\t                sandbox: response.data.configurations.paypalClientId,\n\t\t\t\t\t                production: response.data.configurations.paypalClientId\n\t\t\t\t\t            },\n\n\t\t\t\t\t            funding: {\n\t\t\t\t\t                allowed: [\n\t\t\t\t\t                    paypal.FUNDING.CARD,\n\t\t\t\t\t                    paypal.FUNDING.ELV\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\n\t\t\t\t\t            createOrder: function(data, actions) {\n\t\t\t\t\t\t\t\t\t// Set up the transaction\n\t\t\t\t\t\t\t\t\treturn actions.order.create({\n\t\t\t\t\t\t\t\t\t\tpurchase_units: [{\n\t\t\t\t\t\t\t\t\t\t\tamount: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: self.total,\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t    },\n\n\t\t\t\t\t\t\t    onApprove: function(data, actions) {\n\t\t\t\t\t\t\t\t\t// This function captures the funds from the transaction.\n\n\t\t\t\t\t\t\t\t\treturn actions.order.capture().then(function(details) {\n\t\t\t\t\t\t\t\t\t\t// This function shows a transaction success message to your buyer.\n\n\t\t\t\t\t\t\t\t\t\tself.paidViaPaypal(details)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t            \n\t\t\t\t\t            onCancel: function (data, actions) {\n\t\t\t\t\t                console.log(data)\n\t\t\t\t\t            }\n\n\t\t\t\t\t        }).render(\"#btn-paypal-checkout\")\n\t\t\t\t\t    } catch (error) {\n\t\t\t\t\t        console.error(\"failed to render the PayPal Buttons\", error)\n\t\t\t\t\t    }\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t    console.error(\"failed to load the PayPal JS SDK script\", error)\n\t\t\t\t\t}\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n\t\t\t}\n    \t}\n    }\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}