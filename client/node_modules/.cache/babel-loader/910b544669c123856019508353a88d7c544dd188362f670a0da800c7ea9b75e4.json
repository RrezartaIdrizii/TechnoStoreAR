{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      eventName: '',\n      eventDate: '',\n      eventTime: '',\n      eventLocation: ''\n    };\n  },\n  methods: {\n    submitEvent() {\n      const eventData = {\n        name: this.eventName,\n        date: this.eventDate,\n        time: this.eventTime,\n        location: this.eventLocation\n      };\n\n      // Send the data to the server using axios\n      axios.post('/api/events', eventData).then(response => {\n        console.log(response.data);\n        // Reset the form fields\n        this.eventName = '';\n        this.eventDate = '';\n        this.eventTime = '';\n        this.eventLocation = '';\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","eventName","eventDate","eventTime","eventLocation","methods","submitEvent","eventData","name","date","time","location","post","then","response","console","log","catch","error"],"sources":["C:\\Users\\arbid\\OneDrive\\Desktop\\TechnoStoreAR-main\\client\\src\\components\\EventsComponent.vue"],"sourcesContent":["<template>\n  <div class=\"background-event\">\n    <br>\n<br>\n  <div class=\"event-planning\" >\n    <h1>Event Planning</h1>\n    <div class=\"event-form\">\n      <label for=\"event-name\">Event Name:</label>\n      <input id=\"event-name\" v-model=\"eventName\" />\n\n      <label for=\"event-date\">Event Date:</label>\n      <input id=\"event-date\" type=\"date\" v-model=\"eventDate\" />\n\n      <label for=\"event-time\">Event Time:</label>\n      <input id=\"event-time\" type=\"time\" v-model=\"eventTime\" />\n\n      <label for=\"event-location\">Event Location:</label>\n      <input id=\"event-location\" v-model=\"eventLocation\" />\n\n      <button @click=\"submitEvent\" value=\"submit\" type=\"submit\" name=\"submit\">Submit</button>\n    </div>\n  </div>\n  <br>\n  <br>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      eventName: '',\n      eventDate: '',\n      eventTime: '',\n      eventLocation: ''\n    }\n  },\n  methods: {\n    submitEvent() {\n      const eventData = {\n        name: this.eventName,\n        date: this.eventDate,\n        time: this.eventTime,\n        location: this.eventLocation\n      }\n\n      // Send the data to the server using axios\n      axios.post('/api/events', eventData)\n        .then(response => {\n          console.log(response.data)\n          // Reset the form fields\n          this.eventName = ''\n          this.eventDate = ''\n          this.eventTime = ''\n          this.eventLocation = ''\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n  }\n}\n</script>\n\n\n<style>\n.background-event{\n  background-image: url(../assets/event.png);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n.event-planning {\n  max-width: 800px;\n  margin: 0 auto;\n background-color: aliceblue;\n padding: 10px;\n}\n\n.event-form {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 2rem;\n  padding: 30px;\n}\n\nlabel {\n  font-weight: bold;\n}\n\ninput[type=\"date\"],\ninput[type=\"time\"] {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 0.25rem;\n}\n</style>\n"],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,MAAMC,SAAQ,GAAI;QAChBC,IAAI,EAAE,IAAI,CAACP,SAAS;QACpBQ,IAAI,EAAE,IAAI,CAACP,SAAS;QACpBQ,IAAI,EAAE,IAAI,CAACP,SAAS;QACpBQ,QAAQ,EAAE,IAAI,CAACP;MACjB;;MAEA;MACAL,KAAK,CAACa,IAAI,CAAC,aAAa,EAAEL,SAAS,EAChCM,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACd,IAAI;QACzB;QACA,IAAI,CAACC,SAAQ,GAAI,EAAC;QAClB,IAAI,CAACC,SAAQ,GAAI,EAAC;QAClB,IAAI,CAACC,SAAQ,GAAI,EAAC;QAClB,IAAI,CAACC,aAAY,GAAI,EAAC;MACxB,CAAC,EACAa,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK;MACrB,CAAC;IACL;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}